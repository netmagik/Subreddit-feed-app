{"version":3,"sources":["components/Article.js","App.js","index.js"],"names":["Article","props","href","item","permalink","target","rel","title","App","useState","articles","setArticles","subreddit","setSubReddit","error","setError","useEffect","delay","setTimeout","a","fetch","then","res","status","json","data","children","console","log","catch","err","clearTimeout","className","type","value","onChange","e","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAYeA,MAVf,SAAiBC,GACb,OACI,kCACI,mBAAGC,KAAM,qBAAuBD,EAAME,KAAKC,UAAWC,OAAO,SAASC,IAAI,aAA1E,SACI,6BAAKL,EAAME,KAAKI,aCyDjBC,MA5Df,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,UAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAiCA,OA/BAC,qBAAU,WAEN,IAAMC,EAAQC,YAAW,WACvB,sBAAC,sBAAAC,EAAA,sEACCC,MAAK,mCAA8BR,EAA9B,UAAgDS,MACxD,SAAAC,GACoB,MAAfA,EAAIC,OAIVD,EAAIE,OAAOH,MAAK,SAAAI,GACD,OAATA,IACFd,EAAYc,EAAKA,KAAKC,UACtBC,QAAQC,IAAIH,EAAKA,MACjBV,GAAS,OAPTY,QAAQC,IAAIN,EAAIC,WAYnBM,OACC,SAAAC,GACEH,QAAQC,IAAIE,GACZf,GAAS,MAnBV,0CAAD,KAuBL,KACH,OAAO,kBAAMgB,aAAad,MACrB,CAACL,IAIF,sBAAKoB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACA,wDACE,sBAAMA,UAAU,cAAhB,2CACF,uBACEC,KAAK,OACLD,UAAU,kBACVE,MAAOtB,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAAauB,EAAE/B,OAAO6B,aAEvC,qBAAKF,UAAU,WAAf,SAEc,OAAbtB,GAAsBI,EAGrB,oBAAGkB,UAAU,QAAb,wDAAgE,0BAHlCtB,EAAS2B,KAAI,SAAClC,EAAMmC,GAAP,OAC3C,cAAC,EAAD,CAAiBnC,KAAMA,EAAKsB,MAAda,YChDtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b4855ee1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Article(props) {\n    return (\n        <article>\n            <a href={\"https://reddit.com\" + props.item.permalink} target=\"_blank\" rel=\"noreferrer\">\n                <h3>{props.item.title}</h3>\n            </a>\n        </article>\n    )\n}\n\nexport default Article\n\n","import React, {useState, useEffect} from 'react';\nimport Article from './components/Article';\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n  const [subreddit, setSubReddit] = useState('webdev');\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n   \n      const delay = setTimeout(() => {\n        (async () => {\n    await fetch (`https://www.reddit.com/r/${subreddit}.json`).then\n      (res => {\n        if (res.status !== 200) {\n          console.log(res.status);\n          return;\n      }\n      res.json().then(data => {\n        if (data !== null) {\n          setArticles(data.data.children);\n          console.log(data.data)\n          setError(false)\n        }\n      })\n    } \n      ) // end of then (promise)\n      .catch(\n        err => {\n          console.log(err)\n          setError(true);\n        }\n      )\n  })();\n}, 500);\nreturn () => clearTimeout(delay);\n  }, [subreddit]);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>REDDIT API - Subreddit</h1>\n        <span className=\"search-info\">Enter to Search for Subreddit</span>\n      <input \n        type=\"text\" \n        className=\"subreddit_input\" \n        value={subreddit}\n        onChange={e => setSubReddit(e.target.value)} />\n      </header>\n      <div className=\"articles\">\n      { \n      (articles !== null && !error) ? articles.map((item, i) => \n        <Article key={i} item={item.data} />\n      )\n      : <p className=\"error\">There is either a typo or no Reddit found. <br />\n      </p>\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}